<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>scaml</string>
	</array>
	<key>foldingStartMarker</key>
	<string>^\s*([-%#\:\.\w\=].*)\s$</string>
	<key>foldingStopMarker</key>
	<string>^\s*$</string>
	<key>name</key>
	<string>Scaml (Scalate)</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>^\s*[&amp;!]?==</string>
			<key>contentName</key>
			<string>string.quoted.double.scala</string>
			<key>end</key>
			<string>$\n?</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolated_scala</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(\s*):scala$</string>
			<key>end</key>
			<string>^\1$</string>
			<key>name</key>
			<string>source.scala.embedded.filter.scaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.scala</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.prolog.scaml</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(!!!)($|\s.*)</string>
			<key>name</key>
			<string>meta.prolog.scaml</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>:javascript</string>
			<key>end</key>
			<string>^(\s+)?%</string>
			<key>name</key>
			<string>source.js.embedded.scaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.js</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.js.jquery</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(\s*):javascript$</string>
			<key>end</key>
			<string>^\1$</string>
			<key>name</key>
			<string>source.embedded.filter.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.js</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(\s*):scala$</string>
			<key>end</key>
			<string>^\1$</string>
			<key>name</key>
			<string>source.scala.embedded.filter.scaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.scala</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.comment.scaml</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^ *(/)\s*\S.*$\n?</string>
			<key>name</key>
			<string>comment.line.slash.scaml</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^( *)(/)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.comment.scaml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^(?!\1  )</string>
			<key>name</key>
			<string>comment.block.scaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.scaml</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(?:((%)([\w:]+))|(?=\.\w|#\w))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.tag.scaml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.scaml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.scaml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$|(?!(\&gt;\&lt;|\&lt;?\&gt;?)(\.|#|\{|\[|[&amp;!]?=|~|/))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>[&amp;!]?==</string>
					<key>contentName</key>
					<string>string.quoted.double.scala</string>
					<key>end</key>
					<string>$\n?</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolated_scala</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.class</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\.[\w-]+)</string>
					<key>name</key>
					<string>meta.selector.css</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.id</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#[\w-]+)</string>
					<key>name</key>
					<string>meta.selector.css</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{(?=.*\}||.*\|\s*$)</string>
					<key>end</key>
					<string>\}|$|^(?!.*\|\s*$)</string>
					<key>name</key>
					<string>meta.section.attributes.scaml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.scala</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#continuation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[(?=.*\]|.*\|\s*$)</string>
					<key>end</key>
					<string>\]|$|^(?!.*\|\s*$)</string>
					<key>name</key>
					<string>meta.section.object.scaml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.scala</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#continuation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolated_scala_line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#scalaline</string>
				</dict>
				<dict>
					<key>match</key>
					<string>/</string>
					<key>name</key>
					<string>punctuation.terminator.tag.scaml</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(\s*):scala$</string>
			<key>end</key>
			<string>^\1$</string>
			<key>name</key>
			<string>source.scala.embedded.filter.scaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.scala</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(\s*):scala$</string>
			<key>end</key>
			<string>^\1([^\s]*)$</string>
			<key>name</key>
			<string>source.scala.embedded.filter.scaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.scala</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(\s*):(style|sass)$</string>
			<key>end</key>
			<string>^\1$</string>
			<key>name</key>
			<string>source.sass.embedded.filter.scaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.sass</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(\s*):(java)?script$</string>
			<key>end</key>
			<string>^\1([^\s]*)$</string>
			<key>name</key>
			<string>source.js.embedded.filter.scaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#javascript_filter</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(\s*):plain$</string>
			<key>end</key>
			<string>^\1([^\s]*)$</string>
			<key>name</key>
			<string>text.plain.embedded.filter.scaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>text.plain</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(\s*)(:scala)</string>
			<key>beginCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.filter.scaml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^(?!\1  )</string>
			<key>name</key>
			<string>source.scala.embedded.filter.scaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.scala</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(\s*)(:javascript)</string>
			<key>beginCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.filter.scaml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^(?!\1  )</string>
			<key>name</key>
			<string>source.js.jquery.embedded.filter.scaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.js.jquery</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(\s*)(:sass)</string>
			<key>beginCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.filter.scaml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^(?!\1  )</string>
			<key>name</key>
			<string>source.embedded.filter.sass</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.sass</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(\s*):(styles|sass)$</string>
			<key>end</key>
			<string>^\1$</string>
			<key>name</key>
			<string>source.sass.embedded.filter.scaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.sass</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(\s*):(java)?script$</string>
			<key>end</key>
			<string>^\1$</string>
			<key>name</key>
			<string>source.js.embedded.filter.scaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.js</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(\s*):plain$</string>
			<key>end</key>
			<string>^\1$</string>
			<key>name</key>
			<string>text.plain.embedded.filter.scaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>text.plain</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.escape.scaml</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(\\.)</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(?=[&amp;!]?=|-|~)</string>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolated_scala_line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#scalaline</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>continuation</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.continuation.scaml</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\|)\s*\n</string>
		</dict>
		<key>interpolated_scala</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.scala</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>source.scala.embedded.source.empty</string>
						</dict>
					</dict>
					<key>match</key>
					<string>#\{(\})</string>
					<key>name</key>
					<string>source.scala.embedded.source</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>#\{</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.scala</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\})</string>
					<key>name</key>
					<string>source.scala.embedded.source</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#nest_curly_and_self</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.scala</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.scala</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#@)[a-zA-Z_]\w*</string>
					<key>name</key>
					<string>variable.other.readwrite.instance.scala</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.scala</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#@@)[a-zA-Z_]\w*</string>
					<key>name</key>
					<string>variable.other.readwrite.class.scala</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.scala</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#\$)[a-zA-Z_]\w*</string>
					<key>name</key>
					<string>variable.other.readwrite.global.scala</string>
				</dict>
			</array>
		</dict>
		<key>interpolated_scala_line</key>
		<dict>
			<key>begin</key>
			<string>!?==</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.line.scala.interpolated.scaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolated_scala</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<key>javascript_filter</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolated_scala</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.js</string>
				</dict>
			</array>
		</dict>
		<key>nest_curly_and_self</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\{</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.scope.scala</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#nest_curly_and_self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>source.scala</string>
				</dict>
			</array>
		</dict>
		<key>scalaline</key>
		<dict>
			<key>begin</key>
			<string>!=|&amp;=|==|=|-|~</string>
			<key>contentName</key>
			<string>source.scala.embedded.scaml</string>
			<key>end</key>
			<string>((do|\{)( \|[^|]+\|)?)$|$|^(?!.*\|\s*$)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>source.scala.embedded.html</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.scala.start-block</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.line.scala.scaml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Hack to let scala comments work in this context properly</string>
					<key>match</key>
					<string>#.*$</string>
					<key>name</key>
					<string>comment.line.number-sign.scala</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.scala</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#continuation</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.scaml</string>
	<key>uuid</key>
	<string>ACCBCED2-E173-4559-8708-ECFE5FEA6625</string>
</dict>
</plist>
